[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "web-search-mcp"
version = "0.1.0"
description = "A Model Context Protocol (MCP) server that provides web search capabilities to AI assistants"
authors = [
    {name = "Randy Herritt", email = "randy.herritt@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["mcp", "model-context-protocol", "web-search", "search", "fastmcp"]

dependencies = [
    "mcp>=1.0.0",
    "fastmcp>=0.1.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.1.0",
    "click>=8.0.0",
    "httpx>=0.25.0",
    "asyncio-tools>=0.3.0",
    "typing-extensions>=4.8.0",
    # Web search specific dependencies
    "beautifulsoup4>=4.9.0",
    "fake-useragent>=1.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "bandit>=1.7.5",
    "pre-commit>=3.0.0",
    "toml>=0.10.0",
]

[project.urls]
Homepage = "https://github.com/your-org/web-search-mcp"
Repository = "https://github.com/your-org/web-search-mcp"
Documentation = "https://github.com/your-org/web-search-mcp#readme"
"Bug Tracker" = "https://github.com/your-org/web-search-mcp/issues"

[project.scripts]
web-search-mcp-server = "web_search_mcp.server:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = ["src", "tests"]
python_files = ["test_*.py", "*_test.py", "*test*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async (deselect with '-m \"not asyncio\"')",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["web_search_mcp"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
explicit_package_bases = true
mypy_path = "src"
namespace_packages = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", ".venv", ".tox"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__pycache__/*"]
relative_files = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.xml]
output = "coverage.xml"

[tool.coverage.html]
directory = "htmlcov"

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"] 