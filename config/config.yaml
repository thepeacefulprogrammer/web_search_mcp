server:
  name: "web-search-mcp-server"
  host: "localhost"
  port: 8000
  description: "Web Search MCP Server - Provides web search capabilities to AI assistants"

logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file_enabled: true
  console_enabled: true
  file_path: "logs/web_search_mcp.log"

features:
  enable_auth: false
  enable_caching: true
  enable_metrics: false
  enable_cors: true

# Search-specific configuration
search:
  backend: "duckduckgo"
  max_results: 20
  timeout: 15
  user_agent_rotation: true
  content_extraction: true
  result_filtering: true

# Application-specific configuration
application:
  max_concurrent_searches: 5
  search_timeout: 30
  request_timeout: 30
  
  # Data limits
  max_tools: 1000
  max_data_items: 5000
  
  # Categories for search tools
  allowed_categories:
    - "search"
    - "web"
    - "information"
    - "research"
    - "utility"
  
  # Default values
  defaults:
    tool_category: "search"
    data_limit: 10
    request_timeout: 30

# External services configuration
external_services:
  # DuckDuckGo configuration (no API key required)
  duckduckgo:
    base_url: "https://duckduckgo.com"
    timeout: 15
    retries: 3
    safe_search: "moderate"
  
# Cache configuration (enabled for search results)
cache:
  type: "memory"
  max_size: 1000
  ttl: 3600  # 1 hour cache for search results

# MCP configuration
mcp:
  # Resource configuration
  resources:
    search_config:
      enabled: true
      name: "search-configuration"
    search_history:
      enabled: true
      name: "search-history"
      max_entries: 100
  
  # Prompt configuration
  prompts:
    enabled: true
    web_search:
      enabled: true
    news_search:
      enabled: true
    research:
      enabled: true
    debug:
      enabled: true